// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "CbmService.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::cbm;

class CbmServiceHandler : virtual public CbmServiceIf {
 public:
  CbmServiceHandler() {
    // Your initialization goes here
  }

  int32_t AddAccount(const Account& account) {
    // Your implementation goes here
    printf("AddAccount\n");
  }

  bool DeleteAccount(const int32_t id) {
    // Your implementation goes here
    printf("DeleteAccount\n");
  }

  bool UpdateAccount(const Account& account) {
    // Your implementation goes here
    printf("UpdateAccount\n");
  }

  void GetAccountById(Account& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetAccountById\n");
  }

  void GetAccountByForeignKey(Account& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAccountByForeignKey\n");
  }

  void GetAccountList(std::vector<Account> & _return) {
    // Your implementation goes here
    printf("GetAccountList\n");
  }

  void GetAccountIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetAccountIds\n");
  }

  void GetAccountNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetAccountNames\n");
  }

  void AddMoreAccount(const std::vector<Account> & objs) {
    // Your implementation goes here
    printf("AddMoreAccount\n");
  }

  void DeleteMoreAccount(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreAccount\n");
  }

  void GetAccountByFields(Account& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAccountByFields\n");
  }

  void GetAccountByFields1(Account& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAccountByFields1\n");
  }

  void GetAccountByFields2(Account& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAccountByFields2\n");
  }

  void GetAccountListByFields(std::vector<Account> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAccountListByFields\n");
  }

  void GetAccountListByFields1(std::vector<Account> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAccountListByFields1\n");
  }

  void GetAccountListByFields2(std::vector<Account> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAccountListByFields2\n");
  }

  int32_t AddAdjLayer(const AdjLayer& adj_layer) {
    // Your implementation goes here
    printf("AddAdjLayer\n");
  }

  bool DeleteAdjLayer(const int32_t id) {
    // Your implementation goes here
    printf("DeleteAdjLayer\n");
  }

  bool UpdateAdjLayer(const AdjLayer& adj_layer) {
    // Your implementation goes here
    printf("UpdateAdjLayer\n");
  }

  void GetAdjLayerById(AdjLayer& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetAdjLayerById\n");
  }

  void GetAdjLayerByForeignKey(AdjLayer& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetAdjLayerByForeignKey\n");
  }

  void GetAdjLayerList(std::vector<AdjLayer> & _return) {
    // Your implementation goes here
    printf("GetAdjLayerList\n");
  }

  void GetAdjLayerIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetAdjLayerIds\n");
  }

  void GetAdjLayerNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetAdjLayerNames\n");
  }

  void AddMoreAdjLayer(const std::vector<AdjLayer> & objs) {
    // Your implementation goes here
    printf("AddMoreAdjLayer\n");
  }

  void DeleteMoreAdjLayer(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreAdjLayer\n");
  }

  void GetAdjLayerByFields(AdjLayer& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAdjLayerByFields\n");
  }

  void GetAdjLayerByFields1(AdjLayer& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAdjLayerByFields1\n");
  }

  void GetAdjLayerByFields2(AdjLayer& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAdjLayerByFields2\n");
  }

  void GetAdjLayerListByFields(std::vector<AdjLayer> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetAdjLayerListByFields\n");
  }

  void GetAdjLayerListByFields1(std::vector<AdjLayer> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetAdjLayerListByFields1\n");
  }

  void GetAdjLayerListByFields2(std::vector<AdjLayer> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetAdjLayerListByFields2\n");
  }

  int32_t AddCoal(const Coal& coal) {
    // Your implementation goes here
    printf("AddCoal\n");
  }

  bool DeleteCoal(const int32_t id) {
    // Your implementation goes here
    printf("DeleteCoal\n");
  }

  bool UpdateCoal(const Coal& coal) {
    // Your implementation goes here
    printf("UpdateCoal\n");
  }

  void GetCoalById(Coal& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetCoalById\n");
  }

  void GetCoalByForeignKey(Coal& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetCoalByForeignKey\n");
  }

  void GetCoalList(std::vector<Coal> & _return) {
    // Your implementation goes here
    printf("GetCoalList\n");
  }

  void GetCoalIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetCoalIds\n");
  }

  void GetCoalNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetCoalNames\n");
  }

  void AddMoreCoal(const std::vector<Coal> & objs) {
    // Your implementation goes here
    printf("AddMoreCoal\n");
  }

  void DeleteMoreCoal(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreCoal\n");
  }

  void GetCoalByFields(Coal& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetCoalByFields\n");
  }

  void GetCoalByFields1(Coal& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetCoalByFields1\n");
  }

  void GetCoalByFields2(Coal& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetCoalByFields2\n");
  }

  void GetCoalListByFields(std::vector<Coal> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetCoalListByFields\n");
  }

  void GetCoalListByFields1(std::vector<Coal> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetCoalListByFields1\n");
  }

  void GetCoalListByFields2(std::vector<Coal> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetCoalListByFields2\n");
  }

  int32_t AddComplexity(const Complexity& complexity) {
    // Your implementation goes here
    printf("AddComplexity\n");
  }

  bool DeleteComplexity(const int32_t id) {
    // Your implementation goes here
    printf("DeleteComplexity\n");
  }

  bool UpdateComplexity(const Complexity& complexity) {
    // Your implementation goes here
    printf("UpdateComplexity\n");
  }

  void GetComplexityById(Complexity& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetComplexityById\n");
  }

  void GetComplexityByForeignKey(Complexity& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetComplexityByForeignKey\n");
  }

  void GetComplexityList(std::vector<Complexity> & _return) {
    // Your implementation goes here
    printf("GetComplexityList\n");
  }

  void GetComplexityIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetComplexityIds\n");
  }

  void GetComplexityNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetComplexityNames\n");
  }

  void AddMoreComplexity(const std::vector<Complexity> & objs) {
    // Your implementation goes here
    printf("AddMoreComplexity\n");
  }

  void DeleteMoreComplexity(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreComplexity\n");
  }

  void GetComplexityByFields(Complexity& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetComplexityByFields\n");
  }

  void GetComplexityByFields1(Complexity& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetComplexityByFields1\n");
  }

  void GetComplexityByFields2(Complexity& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetComplexityByFields2\n");
  }

  void GetComplexityListByFields(std::vector<Complexity> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetComplexityListByFields\n");
  }

  void GetComplexityListByFields1(std::vector<Complexity> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetComplexityListByFields1\n");
  }

  void GetComplexityListByFields2(std::vector<Complexity> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetComplexityListByFields2\n");
  }

  int32_t AddDesignDrillingSurfTechnology(const DesignDrillingSurfTechnology& design_drilling_surf_technology) {
    // Your implementation goes here
    printf("AddDesignDrillingSurfTechnology\n");
  }

  bool DeleteDesignDrillingSurfTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignDrillingSurfTechnology\n");
  }

  bool UpdateDesignDrillingSurfTechnology(const DesignDrillingSurfTechnology& design_drilling_surf_technology) {
    // Your implementation goes here
    printf("UpdateDesignDrillingSurfTechnology\n");
  }

  void GetDesignDrillingSurfTechnologyById(DesignDrillingSurfTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyById\n");
  }

  void GetDesignDrillingSurfTechnologyByForeignKey(DesignDrillingSurfTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByForeignKey\n");
  }

  void GetDesignDrillingSurfTechnologyList(std::vector<DesignDrillingSurfTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyList\n");
  }

  void GetDesignDrillingSurfTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyIds\n");
  }

  void GetDesignDrillingSurfTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyNames\n");
  }

  void AddMoreDesignDrillingSurfTechnology(const std::vector<DesignDrillingSurfTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignDrillingSurfTechnology\n");
  }

  void DeleteMoreDesignDrillingSurfTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignDrillingSurfTechnology\n");
  }

  void GetDesignDrillingSurfTechnologyByFields(DesignDrillingSurfTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByFields\n");
  }

  void GetDesignDrillingSurfTechnologyByFields1(DesignDrillingSurfTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByFields1\n");
  }

  void GetDesignDrillingSurfTechnologyByFields2(DesignDrillingSurfTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyByFields2\n");
  }

  void GetDesignDrillingSurfTechnologyListByFields(std::vector<DesignDrillingSurfTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyListByFields\n");
  }

  void GetDesignDrillingSurfTechnologyListByFields1(std::vector<DesignDrillingSurfTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyListByFields1\n");
  }

  void GetDesignDrillingSurfTechnologyListByFields2(std::vector<DesignDrillingSurfTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignDrillingSurfTechnologyListByFields2\n");
  }

  int32_t AddDesignGoafTechnology(const DesignGoafTechnology& design_goaf_technology) {
    // Your implementation goes here
    printf("AddDesignGoafTechnology\n");
  }

  bool DeleteDesignGoafTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignGoafTechnology\n");
  }

  bool UpdateDesignGoafTechnology(const DesignGoafTechnology& design_goaf_technology) {
    // Your implementation goes here
    printf("UpdateDesignGoafTechnology\n");
  }

  void GetDesignGoafTechnologyById(DesignGoafTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyById\n");
  }

  void GetDesignGoafTechnologyByForeignKey(DesignGoafTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByForeignKey\n");
  }

  void GetDesignGoafTechnologyList(std::vector<DesignGoafTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyList\n");
  }

  void GetDesignGoafTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyIds\n");
  }

  void GetDesignGoafTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyNames\n");
  }

  void AddMoreDesignGoafTechnology(const std::vector<DesignGoafTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignGoafTechnology\n");
  }

  void DeleteMoreDesignGoafTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignGoafTechnology\n");
  }

  void GetDesignGoafTechnologyByFields(DesignGoafTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByFields\n");
  }

  void GetDesignGoafTechnologyByFields1(DesignGoafTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByFields1\n");
  }

  void GetDesignGoafTechnologyByFields2(DesignGoafTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyByFields2\n");
  }

  void GetDesignGoafTechnologyListByFields(std::vector<DesignGoafTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyListByFields\n");
  }

  void GetDesignGoafTechnologyListByFields1(std::vector<DesignGoafTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyListByFields1\n");
  }

  void GetDesignGoafTechnologyListByFields2(std::vector<DesignGoafTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignGoafTechnologyListByFields2\n");
  }

  int32_t AddDesignPore(const DesignPore& design_pore) {
    // Your implementation goes here
    printf("AddDesignPore\n");
  }

  bool DeleteDesignPore(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignPore\n");
  }

  bool UpdateDesignPore(const DesignPore& design_pore) {
    // Your implementation goes here
    printf("UpdateDesignPore\n");
  }

  void GetDesignPoreById(DesignPore& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignPoreById\n");
  }

  void GetDesignPoreByForeignKey(DesignPore& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignPoreByForeignKey\n");
  }

  void GetDesignPoreList(std::vector<DesignPore> & _return) {
    // Your implementation goes here
    printf("GetDesignPoreList\n");
  }

  void GetDesignPoreIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignPoreIds\n");
  }

  void GetDesignPoreNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignPoreNames\n");
  }

  void AddMoreDesignPore(const std::vector<DesignPore> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignPore\n");
  }

  void DeleteMoreDesignPore(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignPore\n");
  }

  void GetDesignPoreByFields(DesignPore& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignPoreByFields\n");
  }

  void GetDesignPoreByFields1(DesignPore& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignPoreByFields1\n");
  }

  void GetDesignPoreByFields2(DesignPore& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignPoreByFields2\n");
  }

  void GetDesignPoreListByFields(std::vector<DesignPore> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignPoreListByFields\n");
  }

  void GetDesignPoreListByFields1(std::vector<DesignPore> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignPoreListByFields1\n");
  }

  void GetDesignPoreListByFields2(std::vector<DesignPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignPoreListByFields2\n");
  }

  int32_t AddDesignSite(const DesignSite& design_site) {
    // Your implementation goes here
    printf("AddDesignSite\n");
  }

  bool DeleteDesignSite(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignSite\n");
  }

  bool UpdateDesignSite(const DesignSite& design_site) {
    // Your implementation goes here
    printf("UpdateDesignSite\n");
  }

  void GetDesignSiteById(DesignSite& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignSiteById\n");
  }

  void GetDesignSiteByForeignKey(DesignSite& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignSiteByForeignKey\n");
  }

  void GetDesignSiteList(std::vector<DesignSite> & _return) {
    // Your implementation goes here
    printf("GetDesignSiteList\n");
  }

  void GetDesignSiteIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignSiteIds\n");
  }

  void GetDesignSiteNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignSiteNames\n");
  }

  void AddMoreDesignSite(const std::vector<DesignSite> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignSite\n");
  }

  void DeleteMoreDesignSite(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignSite\n");
  }

  void GetDesignSiteByFields(DesignSite& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignSiteByFields\n");
  }

  void GetDesignSiteByFields1(DesignSite& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignSiteByFields1\n");
  }

  void GetDesignSiteByFields2(DesignSite& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignSiteByFields2\n");
  }

  void GetDesignSiteListByFields(std::vector<DesignSite> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignSiteListByFields\n");
  }

  void GetDesignSiteListByFields1(std::vector<DesignSite> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignSiteListByFields1\n");
  }

  void GetDesignSiteListByFields2(std::vector<DesignSite> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignSiteListByFields2\n");
  }

  int32_t AddDesignTechnology(const DesignTechnology& design_technology) {
    // Your implementation goes here
    printf("AddDesignTechnology\n");
  }

  bool DeleteDesignTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignTechnology\n");
  }

  bool UpdateDesignTechnology(const DesignTechnology& design_technology) {
    // Your implementation goes here
    printf("UpdateDesignTechnology\n");
  }

  void GetDesignTechnologyById(DesignTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTechnologyById\n");
  }

  void GetDesignTechnologyByForeignKey(DesignTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignTechnologyByForeignKey\n");
  }

  void GetDesignTechnologyList(std::vector<DesignTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignTechnologyList\n");
  }

  void GetDesignTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignTechnologyIds\n");
  }

  void GetDesignTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignTechnologyNames\n");
  }

  void AddMoreDesignTechnology(const std::vector<DesignTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignTechnology\n");
  }

  void DeleteMoreDesignTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignTechnology\n");
  }

  void GetDesignTechnologyByFields(DesignTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTechnologyByFields\n");
  }

  void GetDesignTechnologyByFields1(DesignTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTechnologyByFields1\n");
  }

  void GetDesignTechnologyByFields2(DesignTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTechnologyByFields2\n");
  }

  void GetDesignTechnologyListByFields(std::vector<DesignTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignTechnologyListByFields\n");
  }

  void GetDesignTechnologyListByFields1(std::vector<DesignTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignTechnologyListByFields1\n");
  }

  void GetDesignTechnologyListByFields2(std::vector<DesignTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignTechnologyListByFields2\n");
  }

  int32_t AddDesignWorkSurfTechnology(const DesignWorkSurfTechnology& design_work_surf_technology) {
    // Your implementation goes here
    printf("AddDesignWorkSurfTechnology\n");
  }

  bool DeleteDesignWorkSurfTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDesignWorkSurfTechnology\n");
  }

  bool UpdateDesignWorkSurfTechnology(const DesignWorkSurfTechnology& design_work_surf_technology) {
    // Your implementation goes here
    printf("UpdateDesignWorkSurfTechnology\n");
  }

  void GetDesignWorkSurfTechnologyById(DesignWorkSurfTechnology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyById\n");
  }

  void GetDesignWorkSurfTechnologyByForeignKey(DesignWorkSurfTechnology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByForeignKey\n");
  }

  void GetDesignWorkSurfTechnologyList(std::vector<DesignWorkSurfTechnology> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyList\n");
  }

  void GetDesignWorkSurfTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyIds\n");
  }

  void GetDesignWorkSurfTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyNames\n");
  }

  void AddMoreDesignWorkSurfTechnology(const std::vector<DesignWorkSurfTechnology> & objs) {
    // Your implementation goes here
    printf("AddMoreDesignWorkSurfTechnology\n");
  }

  void DeleteMoreDesignWorkSurfTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDesignWorkSurfTechnology\n");
  }

  void GetDesignWorkSurfTechnologyByFields(DesignWorkSurfTechnology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByFields\n");
  }

  void GetDesignWorkSurfTechnologyByFields1(DesignWorkSurfTechnology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByFields1\n");
  }

  void GetDesignWorkSurfTechnologyByFields2(DesignWorkSurfTechnology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyByFields2\n");
  }

  void GetDesignWorkSurfTechnologyListByFields(std::vector<DesignWorkSurfTechnology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyListByFields\n");
  }

  void GetDesignWorkSurfTechnologyListByFields1(std::vector<DesignWorkSurfTechnology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyListByFields1\n");
  }

  void GetDesignWorkSurfTechnologyListByFields2(std::vector<DesignWorkSurfTechnology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDesignWorkSurfTechnologyListByFields2\n");
  }

  int32_t AddDrillingRadiusParam(const DrillingRadiusParam& drilling_radius_param) {
    // Your implementation goes here
    printf("AddDrillingRadiusParam\n");
  }

  bool DeleteDrillingRadiusParam(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDrillingRadiusParam\n");
  }

  bool UpdateDrillingRadiusParam(const DrillingRadiusParam& drilling_radius_param) {
    // Your implementation goes here
    printf("UpdateDrillingRadiusParam\n");
  }

  void GetDrillingRadiusParamById(DrillingRadiusParam& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamById\n");
  }

  void GetDrillingRadiusParamByForeignKey(DrillingRadiusParam& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByForeignKey\n");
  }

  void GetDrillingRadiusParamList(std::vector<DrillingRadiusParam> & _return) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamList\n");
  }

  void GetDrillingRadiusParamIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamIds\n");
  }

  void GetDrillingRadiusParamNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamNames\n");
  }

  void AddMoreDrillingRadiusParam(const std::vector<DrillingRadiusParam> & objs) {
    // Your implementation goes here
    printf("AddMoreDrillingRadiusParam\n");
  }

  void DeleteMoreDrillingRadiusParam(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDrillingRadiusParam\n");
  }

  void GetDrillingRadiusParamByFields(DrillingRadiusParam& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByFields\n");
  }

  void GetDrillingRadiusParamByFields1(DrillingRadiusParam& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByFields1\n");
  }

  void GetDrillingRadiusParamByFields2(DrillingRadiusParam& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamByFields2\n");
  }

  void GetDrillingRadiusParamListByFields(std::vector<DrillingRadiusParam> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamListByFields\n");
  }

  void GetDrillingRadiusParamListByFields1(std::vector<DrillingRadiusParam> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamListByFields1\n");
  }

  void GetDrillingRadiusParamListByFields2(std::vector<DrillingRadiusParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingRadiusParamListByFields2\n");
  }

  int32_t AddDrillingSurf(const DrillingSurf& drilling_surf) {
    // Your implementation goes here
    printf("AddDrillingSurf\n");
  }

  bool DeleteDrillingSurf(const int32_t id) {
    // Your implementation goes here
    printf("DeleteDrillingSurf\n");
  }

  bool UpdateDrillingSurf(const DrillingSurf& drilling_surf) {
    // Your implementation goes here
    printf("UpdateDrillingSurf\n");
  }

  void GetDrillingSurfById(DrillingSurf& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingSurfById\n");
  }

  void GetDrillingSurfByForeignKey(DrillingSurf& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetDrillingSurfByForeignKey\n");
  }

  void GetDrillingSurfList(std::vector<DrillingSurf> & _return) {
    // Your implementation goes here
    printf("GetDrillingSurfList\n");
  }

  void GetDrillingSurfIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetDrillingSurfIds\n");
  }

  void GetDrillingSurfNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetDrillingSurfNames\n");
  }

  void AddMoreDrillingSurf(const std::vector<DrillingSurf> & objs) {
    // Your implementation goes here
    printf("AddMoreDrillingSurf\n");
  }

  void DeleteMoreDrillingSurf(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreDrillingSurf\n");
  }

  void GetDrillingSurfByFields(DrillingSurf& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingSurfByFields\n");
  }

  void GetDrillingSurfByFields1(DrillingSurf& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingSurfByFields1\n");
  }

  void GetDrillingSurfByFields2(DrillingSurf& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingSurfByFields2\n");
  }

  void GetDrillingSurfListByFields(std::vector<DrillingSurf> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetDrillingSurfListByFields\n");
  }

  void GetDrillingSurfListByFields1(std::vector<DrillingSurf> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetDrillingSurfListByFields1\n");
  }

  void GetDrillingSurfListByFields2(std::vector<DrillingSurf> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetDrillingSurfListByFields2\n");
  }

  int32_t AddEvalUnit(const EvalUnit& eval_unit) {
    // Your implementation goes here
    printf("AddEvalUnit\n");
  }

  bool DeleteEvalUnit(const int32_t id) {
    // Your implementation goes here
    printf("DeleteEvalUnit\n");
  }

  bool UpdateEvalUnit(const EvalUnit& eval_unit) {
    // Your implementation goes here
    printf("UpdateEvalUnit\n");
  }

  void GetEvalUnitById(EvalUnit& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetEvalUnitById\n");
  }

  void GetEvalUnitByForeignKey(EvalUnit& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetEvalUnitByForeignKey\n");
  }

  void GetEvalUnitList(std::vector<EvalUnit> & _return) {
    // Your implementation goes here
    printf("GetEvalUnitList\n");
  }

  void GetEvalUnitIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetEvalUnitIds\n");
  }

  void GetEvalUnitNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetEvalUnitNames\n");
  }

  void AddMoreEvalUnit(const std::vector<EvalUnit> & objs) {
    // Your implementation goes here
    printf("AddMoreEvalUnit\n");
  }

  void DeleteMoreEvalUnit(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreEvalUnit\n");
  }

  void GetEvalUnitByFields(EvalUnit& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetEvalUnitByFields\n");
  }

  void GetEvalUnitByFields1(EvalUnit& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetEvalUnitByFields1\n");
  }

  void GetEvalUnitByFields2(EvalUnit& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetEvalUnitByFields2\n");
  }

  void GetEvalUnitListByFields(std::vector<EvalUnit> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetEvalUnitListByFields\n");
  }

  void GetEvalUnitListByFields1(std::vector<EvalUnit> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetEvalUnitListByFields1\n");
  }

  void GetEvalUnitListByFields2(std::vector<EvalUnit> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetEvalUnitListByFields2\n");
  }

  int32_t AddHighDrillingPore(const HighDrillingPore& high_drilling_pore) {
    // Your implementation goes here
    printf("AddHighDrillingPore\n");
  }

  bool DeleteHighDrillingPore(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingPore\n");
  }

  bool UpdateHighDrillingPore(const HighDrillingPore& high_drilling_pore) {
    // Your implementation goes here
    printf("UpdateHighDrillingPore\n");
  }

  void GetHighDrillingPoreById(HighDrillingPore& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreById\n");
  }

  void GetHighDrillingPoreByForeignKey(HighDrillingPore& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByForeignKey\n");
  }

  void GetHighDrillingPoreList(std::vector<HighDrillingPore> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreList\n");
  }

  void GetHighDrillingPoreIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreIds\n");
  }

  void GetHighDrillingPoreNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreNames\n");
  }

  void AddMoreHighDrillingPore(const std::vector<HighDrillingPore> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingPore\n");
  }

  void DeleteMoreHighDrillingPore(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingPore\n");
  }

  void GetHighDrillingPoreByFields(HighDrillingPore& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByFields\n");
  }

  void GetHighDrillingPoreByFields1(HighDrillingPore& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByFields1\n");
  }

  void GetHighDrillingPoreByFields2(HighDrillingPore& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreByFields2\n");
  }

  void GetHighDrillingPoreListByFields(std::vector<HighDrillingPore> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreListByFields\n");
  }

  void GetHighDrillingPoreListByFields1(std::vector<HighDrillingPore> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreListByFields1\n");
  }

  void GetHighDrillingPoreListByFields2(std::vector<HighDrillingPore> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreListByFields2\n");
  }

  int32_t AddHighDrillingPoreParam(const HighDrillingPoreParam& high_drilling_pore_param) {
    // Your implementation goes here
    printf("AddHighDrillingPoreParam\n");
  }

  bool DeleteHighDrillingPoreParam(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingPoreParam\n");
  }

  bool UpdateHighDrillingPoreParam(const HighDrillingPoreParam& high_drilling_pore_param) {
    // Your implementation goes here
    printf("UpdateHighDrillingPoreParam\n");
  }

  void GetHighDrillingPoreParamById(HighDrillingPoreParam& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamById\n");
  }

  void GetHighDrillingPoreParamByForeignKey(HighDrillingPoreParam& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByForeignKey\n");
  }

  void GetHighDrillingPoreParamList(std::vector<HighDrillingPoreParam> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamList\n");
  }

  void GetHighDrillingPoreParamIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamIds\n");
  }

  void GetHighDrillingPoreParamNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamNames\n");
  }

  void AddMoreHighDrillingPoreParam(const std::vector<HighDrillingPoreParam> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingPoreParam\n");
  }

  void DeleteMoreHighDrillingPoreParam(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingPoreParam\n");
  }

  void GetHighDrillingPoreParamByFields(HighDrillingPoreParam& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByFields\n");
  }

  void GetHighDrillingPoreParamByFields1(HighDrillingPoreParam& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByFields1\n");
  }

  void GetHighDrillingPoreParamByFields2(HighDrillingPoreParam& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamByFields2\n");
  }

  void GetHighDrillingPoreParamListByFields(std::vector<HighDrillingPoreParam> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamListByFields\n");
  }

  void GetHighDrillingPoreParamListByFields1(std::vector<HighDrillingPoreParam> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamListByFields1\n");
  }

  void GetHighDrillingPoreParamListByFields2(std::vector<HighDrillingPoreParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingPoreParamListByFields2\n");
  }

  int32_t AddHighDrillingSiteParam(const HighDrillingSiteParam& high_drilling_site_param) {
    // Your implementation goes here
    printf("AddHighDrillingSiteParam\n");
  }

  bool DeleteHighDrillingSiteParam(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingSiteParam\n");
  }

  bool UpdateHighDrillingSiteParam(const HighDrillingSiteParam& high_drilling_site_param) {
    // Your implementation goes here
    printf("UpdateHighDrillingSiteParam\n");
  }

  void GetHighDrillingSiteParamById(HighDrillingSiteParam& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamById\n");
  }

  void GetHighDrillingSiteParamByForeignKey(HighDrillingSiteParam& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByForeignKey\n");
  }

  void GetHighDrillingSiteParamList(std::vector<HighDrillingSiteParam> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamList\n");
  }

  void GetHighDrillingSiteParamIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamIds\n");
  }

  void GetHighDrillingSiteParamNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamNames\n");
  }

  void AddMoreHighDrillingSiteParam(const std::vector<HighDrillingSiteParam> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingSiteParam\n");
  }

  void DeleteMoreHighDrillingSiteParam(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingSiteParam\n");
  }

  void GetHighDrillingSiteParamByFields(HighDrillingSiteParam& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByFields\n");
  }

  void GetHighDrillingSiteParamByFields1(HighDrillingSiteParam& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByFields1\n");
  }

  void GetHighDrillingSiteParamByFields2(HighDrillingSiteParam& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamByFields2\n");
  }

  void GetHighDrillingSiteParamListByFields(std::vector<HighDrillingSiteParam> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamListByFields\n");
  }

  void GetHighDrillingSiteParamListByFields1(std::vector<HighDrillingSiteParam> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamListByFields1\n");
  }

  void GetHighDrillingSiteParamListByFields2(std::vector<HighDrillingSiteParam> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingSiteParamListByFields2\n");
  }

  int32_t AddHighDrillingTunnel(const HighDrillingTunnel& high_drilling_tunnel) {
    // Your implementation goes here
    printf("AddHighDrillingTunnel\n");
  }

  bool DeleteHighDrillingTunnel(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHighDrillingTunnel\n");
  }

  bool UpdateHighDrillingTunnel(const HighDrillingTunnel& high_drilling_tunnel) {
    // Your implementation goes here
    printf("UpdateHighDrillingTunnel\n");
  }

  void GetHighDrillingTunnelById(HighDrillingTunnel& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelById\n");
  }

  void GetHighDrillingTunnelByForeignKey(HighDrillingTunnel& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByForeignKey\n");
  }

  void GetHighDrillingTunnelList(std::vector<HighDrillingTunnel> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelList\n");
  }

  void GetHighDrillingTunnelIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelIds\n");
  }

  void GetHighDrillingTunnelNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelNames\n");
  }

  void AddMoreHighDrillingTunnel(const std::vector<HighDrillingTunnel> & objs) {
    // Your implementation goes here
    printf("AddMoreHighDrillingTunnel\n");
  }

  void DeleteMoreHighDrillingTunnel(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHighDrillingTunnel\n");
  }

  void GetHighDrillingTunnelByFields(HighDrillingTunnel& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByFields\n");
  }

  void GetHighDrillingTunnelByFields1(HighDrillingTunnel& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByFields1\n");
  }

  void GetHighDrillingTunnelByFields2(HighDrillingTunnel& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelByFields2\n");
  }

  void GetHighDrillingTunnelListByFields(std::vector<HighDrillingTunnel> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelListByFields\n");
  }

  void GetHighDrillingTunnelListByFields1(std::vector<HighDrillingTunnel> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelListByFields1\n");
  }

  void GetHighDrillingTunnelListByFields2(std::vector<HighDrillingTunnel> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHighDrillingTunnelListByFields2\n");
  }

  int32_t AddHydrGeo(const HydrGeo& hydr_geo) {
    // Your implementation goes here
    printf("AddHydrGeo\n");
  }

  bool DeleteHydrGeo(const int32_t id) {
    // Your implementation goes here
    printf("DeleteHydrGeo\n");
  }

  bool UpdateHydrGeo(const HydrGeo& hydr_geo) {
    // Your implementation goes here
    printf("UpdateHydrGeo\n");
  }

  void GetHydrGeoById(HydrGeo& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetHydrGeoById\n");
  }

  void GetHydrGeoByForeignKey(HydrGeo& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetHydrGeoByForeignKey\n");
  }

  void GetHydrGeoList(std::vector<HydrGeo> & _return) {
    // Your implementation goes here
    printf("GetHydrGeoList\n");
  }

  void GetHydrGeoIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetHydrGeoIds\n");
  }

  void GetHydrGeoNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetHydrGeoNames\n");
  }

  void AddMoreHydrGeo(const std::vector<HydrGeo> & objs) {
    // Your implementation goes here
    printf("AddMoreHydrGeo\n");
  }

  void DeleteMoreHydrGeo(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreHydrGeo\n");
  }

  void GetHydrGeoByFields(HydrGeo& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHydrGeoByFields\n");
  }

  void GetHydrGeoByFields1(HydrGeo& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHydrGeoByFields1\n");
  }

  void GetHydrGeoByFields2(HydrGeo& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHydrGeoByFields2\n");
  }

  void GetHydrGeoListByFields(std::vector<HydrGeo> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetHydrGeoListByFields\n");
  }

  void GetHydrGeoListByFields1(std::vector<HydrGeo> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetHydrGeoListByFields1\n");
  }

  void GetHydrGeoListByFields2(std::vector<HydrGeo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetHydrGeoListByFields2\n");
  }

  int32_t AddMine(const Mine& mine) {
    // Your implementation goes here
    printf("AddMine\n");
  }

  bool DeleteMine(const int32_t id) {
    // Your implementation goes here
    printf("DeleteMine\n");
  }

  bool UpdateMine(const Mine& mine) {
    // Your implementation goes here
    printf("UpdateMine\n");
  }

  void GetMineById(Mine& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetMineById\n");
  }

  void GetMineByForeignKey(Mine& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineByForeignKey\n");
  }

  void GetMineList(std::vector<Mine> & _return) {
    // Your implementation goes here
    printf("GetMineList\n");
  }

  void GetMineIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetMineIds\n");
  }

  void GetMineNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetMineNames\n");
  }

  void AddMoreMine(const std::vector<Mine> & objs) {
    // Your implementation goes here
    printf("AddMoreMine\n");
  }

  void DeleteMoreMine(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreMine\n");
  }

  void GetMineByFields(Mine& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineByFields\n");
  }

  void GetMineByFields1(Mine& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineByFields1\n");
  }

  void GetMineByFields2(Mine& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineByFields2\n");
  }

  void GetMineListByFields(std::vector<Mine> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineListByFields\n");
  }

  void GetMineListByFields1(std::vector<Mine> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineListByFields1\n");
  }

  void GetMineListByFields2(std::vector<Mine> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineListByFields2\n");
  }

  int32_t AddMineBase(const MineBase& mine_base) {
    // Your implementation goes here
    printf("AddMineBase\n");
  }

  bool DeleteMineBase(const int32_t id) {
    // Your implementation goes here
    printf("DeleteMineBase\n");
  }

  bool UpdateMineBase(const MineBase& mine_base) {
    // Your implementation goes here
    printf("UpdateMineBase\n");
  }

  void GetMineBaseById(MineBase& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetMineBaseById\n");
  }

  void GetMineBaseByForeignKey(MineBase& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineBaseByForeignKey\n");
  }

  void GetMineBaseList(std::vector<MineBase> & _return) {
    // Your implementation goes here
    printf("GetMineBaseList\n");
  }

  void GetMineBaseIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetMineBaseIds\n");
  }

  void GetMineBaseNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetMineBaseNames\n");
  }

  void AddMoreMineBase(const std::vector<MineBase> & objs) {
    // Your implementation goes here
    printf("AddMoreMineBase\n");
  }

  void DeleteMoreMineBase(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreMineBase\n");
  }

  void GetMineBaseByFields(MineBase& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineBaseByFields\n");
  }

  void GetMineBaseByFields1(MineBase& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineBaseByFields1\n");
  }

  void GetMineBaseByFields2(MineBase& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineBaseByFields2\n");
  }

  void GetMineBaseListByFields(std::vector<MineBase> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineBaseListByFields\n");
  }

  void GetMineBaseListByFields1(std::vector<MineBase> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineBaseListByFields1\n");
  }

  void GetMineBaseListByFields2(std::vector<MineBase> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineBaseListByFields2\n");
  }

  int32_t AddMineRegion(const MineRegion& mine_region) {
    // Your implementation goes here
    printf("AddMineRegion\n");
  }

  bool DeleteMineRegion(const int32_t id) {
    // Your implementation goes here
    printf("DeleteMineRegion\n");
  }

  bool UpdateMineRegion(const MineRegion& mine_region) {
    // Your implementation goes here
    printf("UpdateMineRegion\n");
  }

  void GetMineRegionById(MineRegion& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetMineRegionById\n");
  }

  void GetMineRegionByForeignKey(MineRegion& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetMineRegionByForeignKey\n");
  }

  void GetMineRegionList(std::vector<MineRegion> & _return) {
    // Your implementation goes here
    printf("GetMineRegionList\n");
  }

  void GetMineRegionIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetMineRegionIds\n");
  }

  void GetMineRegionNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetMineRegionNames\n");
  }

  void AddMoreMineRegion(const std::vector<MineRegion> & objs) {
    // Your implementation goes here
    printf("AddMoreMineRegion\n");
  }

  void DeleteMoreMineRegion(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreMineRegion\n");
  }

  void GetMineRegionByFields(MineRegion& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineRegionByFields\n");
  }

  void GetMineRegionByFields1(MineRegion& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineRegionByFields1\n");
  }

  void GetMineRegionByFields2(MineRegion& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineRegionByFields2\n");
  }

  void GetMineRegionListByFields(std::vector<MineRegion> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetMineRegionListByFields\n");
  }

  void GetMineRegionListByFields1(std::vector<MineRegion> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetMineRegionListByFields1\n");
  }

  void GetMineRegionListByFields2(std::vector<MineRegion> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetMineRegionListByFields2\n");
  }

  int32_t AddPoreFlow(const PoreFlow& pore_flow) {
    // Your implementation goes here
    printf("AddPoreFlow\n");
  }

  bool DeletePoreFlow(const int32_t id) {
    // Your implementation goes here
    printf("DeletePoreFlow\n");
  }

  bool UpdatePoreFlow(const PoreFlow& pore_flow) {
    // Your implementation goes here
    printf("UpdatePoreFlow\n");
  }

  void GetPoreFlowById(PoreFlow& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreFlowById\n");
  }

  void GetPoreFlowByForeignKey(PoreFlow& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreFlowByForeignKey\n");
  }

  void GetPoreFlowList(std::vector<PoreFlow> & _return) {
    // Your implementation goes here
    printf("GetPoreFlowList\n");
  }

  void GetPoreFlowIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetPoreFlowIds\n");
  }

  void GetPoreFlowNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetPoreFlowNames\n");
  }

  void AddMorePoreFlow(const std::vector<PoreFlow> & objs) {
    // Your implementation goes here
    printf("AddMorePoreFlow\n");
  }

  void DeleteMorePoreFlow(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMorePoreFlow\n");
  }

  void GetPoreFlowByFields(PoreFlow& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreFlowByFields\n");
  }

  void GetPoreFlowByFields1(PoreFlow& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreFlowByFields1\n");
  }

  void GetPoreFlowByFields2(PoreFlow& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreFlowByFields2\n");
  }

  void GetPoreFlowListByFields(std::vector<PoreFlow> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreFlowListByFields\n");
  }

  void GetPoreFlowListByFields1(std::vector<PoreFlow> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreFlowListByFields1\n");
  }

  void GetPoreFlowListByFields2(std::vector<PoreFlow> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreFlowListByFields2\n");
  }

  int32_t AddPoreSize(const PoreSize& pore_size) {
    // Your implementation goes here
    printf("AddPoreSize\n");
  }

  bool DeletePoreSize(const int32_t id) {
    // Your implementation goes here
    printf("DeletePoreSize\n");
  }

  bool UpdatePoreSize(const PoreSize& pore_size) {
    // Your implementation goes here
    printf("UpdatePoreSize\n");
  }

  void GetPoreSizeById(PoreSize& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreSizeById\n");
  }

  void GetPoreSizeByForeignKey(PoreSize& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetPoreSizeByForeignKey\n");
  }

  void GetPoreSizeList(std::vector<PoreSize> & _return) {
    // Your implementation goes here
    printf("GetPoreSizeList\n");
  }

  void GetPoreSizeIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetPoreSizeIds\n");
  }

  void GetPoreSizeNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetPoreSizeNames\n");
  }

  void AddMorePoreSize(const std::vector<PoreSize> & objs) {
    // Your implementation goes here
    printf("AddMorePoreSize\n");
  }

  void DeleteMorePoreSize(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMorePoreSize\n");
  }

  void GetPoreSizeByFields(PoreSize& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreSizeByFields\n");
  }

  void GetPoreSizeByFields1(PoreSize& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreSizeByFields1\n");
  }

  void GetPoreSizeByFields2(PoreSize& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreSizeByFields2\n");
  }

  void GetPoreSizeListByFields(std::vector<PoreSize> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetPoreSizeListByFields\n");
  }

  void GetPoreSizeListByFields1(std::vector<PoreSize> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetPoreSizeListByFields1\n");
  }

  void GetPoreSizeListByFields2(std::vector<PoreSize> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetPoreSizeListByFields2\n");
  }

  int32_t AddResAbundance(const ResAbundance& res_abundance) {
    // Your implementation goes here
    printf("AddResAbundance\n");
  }

  bool DeleteResAbundance(const int32_t id) {
    // Your implementation goes here
    printf("DeleteResAbundance\n");
  }

  bool UpdateResAbundance(const ResAbundance& res_abundance) {
    // Your implementation goes here
    printf("UpdateResAbundance\n");
  }

  void GetResAbundanceById(ResAbundance& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetResAbundanceById\n");
  }

  void GetResAbundanceByForeignKey(ResAbundance& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetResAbundanceByForeignKey\n");
  }

  void GetResAbundanceList(std::vector<ResAbundance> & _return) {
    // Your implementation goes here
    printf("GetResAbundanceList\n");
  }

  void GetResAbundanceIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetResAbundanceIds\n");
  }

  void GetResAbundanceNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetResAbundanceNames\n");
  }

  void AddMoreResAbundance(const std::vector<ResAbundance> & objs) {
    // Your implementation goes here
    printf("AddMoreResAbundance\n");
  }

  void DeleteMoreResAbundance(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreResAbundance\n");
  }

  void GetResAbundanceByFields(ResAbundance& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetResAbundanceByFields\n");
  }

  void GetResAbundanceByFields1(ResAbundance& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetResAbundanceByFields1\n");
  }

  void GetResAbundanceByFields2(ResAbundance& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetResAbundanceByFields2\n");
  }

  void GetResAbundanceListByFields(std::vector<ResAbundance> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetResAbundanceListByFields\n");
  }

  void GetResAbundanceListByFields1(std::vector<ResAbundance> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetResAbundanceListByFields1\n");
  }

  void GetResAbundanceListByFields2(std::vector<ResAbundance> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetResAbundanceListByFields2\n");
  }

  int32_t AddRock(const Rock& rock) {
    // Your implementation goes here
    printf("AddRock\n");
  }

  bool DeleteRock(const int32_t id) {
    // Your implementation goes here
    printf("DeleteRock\n");
  }

  bool UpdateRock(const Rock& rock) {
    // Your implementation goes here
    printf("UpdateRock\n");
  }

  void GetRockById(Rock& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetRockById\n");
  }

  void GetRockByForeignKey(Rock& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetRockByForeignKey\n");
  }

  void GetRockList(std::vector<Rock> & _return) {
    // Your implementation goes here
    printf("GetRockList\n");
  }

  void GetRockIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetRockIds\n");
  }

  void GetRockNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetRockNames\n");
  }

  void AddMoreRock(const std::vector<Rock> & objs) {
    // Your implementation goes here
    printf("AddMoreRock\n");
  }

  void DeleteMoreRock(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreRock\n");
  }

  void GetRockByFields(Rock& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetRockByFields\n");
  }

  void GetRockByFields1(Rock& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetRockByFields1\n");
  }

  void GetRockByFields2(Rock& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetRockByFields2\n");
  }

  void GetRockListByFields(std::vector<Rock> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetRockListByFields\n");
  }

  void GetRockListByFields1(std::vector<Rock> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetRockListByFields1\n");
  }

  void GetRockListByFields2(std::vector<Rock> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetRockListByFields2\n");
  }

  int32_t AddSysInfo(const SysInfo& sys_info) {
    // Your implementation goes here
    printf("AddSysInfo\n");
  }

  bool DeleteSysInfo(const int32_t id) {
    // Your implementation goes here
    printf("DeleteSysInfo\n");
  }

  bool UpdateSysInfo(const SysInfo& sys_info) {
    // Your implementation goes here
    printf("UpdateSysInfo\n");
  }

  void GetSysInfoById(SysInfo& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetSysInfoById\n");
  }

  void GetSysInfoByForeignKey(SysInfo& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetSysInfoByForeignKey\n");
  }

  void GetSysInfoList(std::vector<SysInfo> & _return) {
    // Your implementation goes here
    printf("GetSysInfoList\n");
  }

  void GetSysInfoIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetSysInfoIds\n");
  }

  void GetSysInfoNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetSysInfoNames\n");
  }

  void AddMoreSysInfo(const std::vector<SysInfo> & objs) {
    // Your implementation goes here
    printf("AddMoreSysInfo\n");
  }

  void DeleteMoreSysInfo(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreSysInfo\n");
  }

  void GetSysInfoByFields(SysInfo& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetSysInfoByFields\n");
  }

  void GetSysInfoByFields1(SysInfo& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetSysInfoByFields1\n");
  }

  void GetSysInfoByFields2(SysInfo& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetSysInfoByFields2\n");
  }

  void GetSysInfoListByFields(std::vector<SysInfo> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetSysInfoListByFields\n");
  }

  void GetSysInfoListByFields1(std::vector<SysInfo> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetSysInfoListByFields1\n");
  }

  void GetSysInfoListByFields2(std::vector<SysInfo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetSysInfoListByFields2\n");
  }

  int32_t AddTechMode(const TechMode& tech_mode) {
    // Your implementation goes here
    printf("AddTechMode\n");
  }

  bool DeleteTechMode(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTechMode\n");
  }

  bool UpdateTechMode(const TechMode& tech_mode) {
    // Your implementation goes here
    printf("UpdateTechMode\n");
  }

  void GetTechModeById(TechMode& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTechModeById\n");
  }

  void GetTechModeByForeignKey(TechMode& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechModeByForeignKey\n");
  }

  void GetTechModeList(std::vector<TechMode> & _return) {
    // Your implementation goes here
    printf("GetTechModeList\n");
  }

  void GetTechModeIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTechModeIds\n");
  }

  void GetTechModeNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTechModeNames\n");
  }

  void AddMoreTechMode(const std::vector<TechMode> & objs) {
    // Your implementation goes here
    printf("AddMoreTechMode\n");
  }

  void DeleteMoreTechMode(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTechMode\n");
  }

  void GetTechModeByFields(TechMode& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechModeByFields\n");
  }

  void GetTechModeByFields1(TechMode& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechModeByFields1\n");
  }

  void GetTechModeByFields2(TechMode& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechModeByFields2\n");
  }

  void GetTechModeListByFields(std::vector<TechMode> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechModeListByFields\n");
  }

  void GetTechModeListByFields1(std::vector<TechMode> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechModeListByFields1\n");
  }

  void GetTechModeListByFields2(std::vector<TechMode> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechModeListByFields2\n");
  }

  int32_t AddTechnology(const Technology& technology) {
    // Your implementation goes here
    printf("AddTechnology\n");
  }

  bool DeleteTechnology(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTechnology\n");
  }

  bool UpdateTechnology(const Technology& technology) {
    // Your implementation goes here
    printf("UpdateTechnology\n");
  }

  void GetTechnologyById(Technology& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTechnologyById\n");
  }

  void GetTechnologyByForeignKey(Technology& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTechnologyByForeignKey\n");
  }

  void GetTechnologyList(std::vector<Technology> & _return) {
    // Your implementation goes here
    printf("GetTechnologyList\n");
  }

  void GetTechnologyIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTechnologyIds\n");
  }

  void GetTechnologyNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTechnologyNames\n");
  }

  void AddMoreTechnology(const std::vector<Technology> & objs) {
    // Your implementation goes here
    printf("AddMoreTechnology\n");
  }

  void DeleteMoreTechnology(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTechnology\n");
  }

  void GetTechnologyByFields(Technology& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechnologyByFields\n");
  }

  void GetTechnologyByFields1(Technology& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechnologyByFields1\n");
  }

  void GetTechnologyByFields2(Technology& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechnologyByFields2\n");
  }

  void GetTechnologyListByFields(std::vector<Technology> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTechnologyListByFields\n");
  }

  void GetTechnologyListByFields1(std::vector<Technology> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTechnologyListByFields1\n");
  }

  void GetTechnologyListByFields2(std::vector<Technology> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTechnologyListByFields2\n");
  }

  int32_t AddTopoGeo(const TopoGeo& topo_geo) {
    // Your implementation goes here
    printf("AddTopoGeo\n");
  }

  bool DeleteTopoGeo(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTopoGeo\n");
  }

  bool UpdateTopoGeo(const TopoGeo& topo_geo) {
    // Your implementation goes here
    printf("UpdateTopoGeo\n");
  }

  void GetTopoGeoById(TopoGeo& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTopoGeoById\n");
  }

  void GetTopoGeoByForeignKey(TopoGeo& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTopoGeoByForeignKey\n");
  }

  void GetTopoGeoList(std::vector<TopoGeo> & _return) {
    // Your implementation goes here
    printf("GetTopoGeoList\n");
  }

  void GetTopoGeoIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTopoGeoIds\n");
  }

  void GetTopoGeoNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTopoGeoNames\n");
  }

  void AddMoreTopoGeo(const std::vector<TopoGeo> & objs) {
    // Your implementation goes here
    printf("AddMoreTopoGeo\n");
  }

  void DeleteMoreTopoGeo(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTopoGeo\n");
  }

  void GetTopoGeoByFields(TopoGeo& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTopoGeoByFields\n");
  }

  void GetTopoGeoByFields1(TopoGeo& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTopoGeoByFields1\n");
  }

  void GetTopoGeoByFields2(TopoGeo& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTopoGeoByFields2\n");
  }

  void GetTopoGeoListByFields(std::vector<TopoGeo> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTopoGeoListByFields\n");
  }

  void GetTopoGeoListByFields1(std::vector<TopoGeo> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTopoGeoListByFields1\n");
  }

  void GetTopoGeoListByFields2(std::vector<TopoGeo> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTopoGeoListByFields2\n");
  }

  int32_t AddTunnel(const Tunnel& tunnel) {
    // Your implementation goes here
    printf("AddTunnel\n");
  }

  bool DeleteTunnel(const int32_t id) {
    // Your implementation goes here
    printf("DeleteTunnel\n");
  }

  bool UpdateTunnel(const Tunnel& tunnel) {
    // Your implementation goes here
    printf("UpdateTunnel\n");
  }

  void GetTunnelById(Tunnel& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetTunnelById\n");
  }

  void GetTunnelByForeignKey(Tunnel& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetTunnelByForeignKey\n");
  }

  void GetTunnelList(std::vector<Tunnel> & _return) {
    // Your implementation goes here
    printf("GetTunnelList\n");
  }

  void GetTunnelIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetTunnelIds\n");
  }

  void GetTunnelNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetTunnelNames\n");
  }

  void AddMoreTunnel(const std::vector<Tunnel> & objs) {
    // Your implementation goes here
    printf("AddMoreTunnel\n");
  }

  void DeleteMoreTunnel(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreTunnel\n");
  }

  void GetTunnelByFields(Tunnel& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTunnelByFields\n");
  }

  void GetTunnelByFields1(Tunnel& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTunnelByFields1\n");
  }

  void GetTunnelByFields2(Tunnel& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTunnelByFields2\n");
  }

  void GetTunnelListByFields(std::vector<Tunnel> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetTunnelListByFields\n");
  }

  void GetTunnelListByFields1(std::vector<Tunnel> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetTunnelListByFields1\n");
  }

  void GetTunnelListByFields2(std::vector<Tunnel> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetTunnelListByFields2\n");
  }

  int32_t AddWorkArea(const WorkArea& work_area) {
    // Your implementation goes here
    printf("AddWorkArea\n");
  }

  bool DeleteWorkArea(const int32_t id) {
    // Your implementation goes here
    printf("DeleteWorkArea\n");
  }

  bool UpdateWorkArea(const WorkArea& work_area) {
    // Your implementation goes here
    printf("UpdateWorkArea\n");
  }

  void GetWorkAreaById(WorkArea& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkAreaById\n");
  }

  void GetWorkAreaByForeignKey(WorkArea& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkAreaByForeignKey\n");
  }

  void GetWorkAreaList(std::vector<WorkArea> & _return) {
    // Your implementation goes here
    printf("GetWorkAreaList\n");
  }

  void GetWorkAreaIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetWorkAreaIds\n");
  }

  void GetWorkAreaNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetWorkAreaNames\n");
  }

  void AddMoreWorkArea(const std::vector<WorkArea> & objs) {
    // Your implementation goes here
    printf("AddMoreWorkArea\n");
  }

  void DeleteMoreWorkArea(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreWorkArea\n");
  }

  void GetWorkAreaByFields(WorkArea& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkAreaByFields\n");
  }

  void GetWorkAreaByFields1(WorkArea& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkAreaByFields1\n");
  }

  void GetWorkAreaByFields2(WorkArea& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkAreaByFields2\n");
  }

  void GetWorkAreaListByFields(std::vector<WorkArea> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkAreaListByFields\n");
  }

  void GetWorkAreaListByFields1(std::vector<WorkArea> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkAreaListByFields1\n");
  }

  void GetWorkAreaListByFields2(std::vector<WorkArea> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkAreaListByFields2\n");
  }

  int32_t AddWorkSurf(const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("AddWorkSurf\n");
  }

  bool DeleteWorkSurf(const int32_t id) {
    // Your implementation goes here
    printf("DeleteWorkSurf\n");
  }

  bool UpdateWorkSurf(const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("UpdateWorkSurf\n");
  }

  void GetWorkSurfById(WorkSurf& _return, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkSurfById\n");
  }

  void GetWorkSurfByForeignKey(WorkSurf& _return, const std::string& fkey, const int32_t id) {
    // Your implementation goes here
    printf("GetWorkSurfByForeignKey\n");
  }

  void GetWorkSurfList(std::vector<WorkSurf> & _return) {
    // Your implementation goes here
    printf("GetWorkSurfList\n");
  }

  void GetWorkSurfIds(std::vector<int32_t> & _return) {
    // Your implementation goes here
    printf("GetWorkSurfIds\n");
  }

  void GetWorkSurfNames(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("GetWorkSurfNames\n");
  }

  void AddMoreWorkSurf(const std::vector<WorkSurf> & objs) {
    // Your implementation goes here
    printf("AddMoreWorkSurf\n");
  }

  void DeleteMoreWorkSurf(const std::vector<int32_t> & obj_ids) {
    // Your implementation goes here
    printf("DeleteMoreWorkSurf\n");
  }

  void GetWorkSurfByFields(WorkSurf& _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkSurfByFields\n");
  }

  void GetWorkSurfByFields1(WorkSurf& _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkSurfByFields1\n");
  }

  void GetWorkSurfByFields2(WorkSurf& _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkSurfByFields2\n");
  }

  void GetWorkSurfListByFields(std::vector<WorkSurf> & _return, const std::map<std::string, std::string> & fields) {
    // Your implementation goes here
    printf("GetWorkSurfListByFields\n");
  }

  void GetWorkSurfListByFields1(std::vector<WorkSurf> & _return, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("GetWorkSurfListByFields1\n");
  }

  void GetWorkSurfListByFields2(std::vector<WorkSurf> & _return, const std::string& field1, const std::string& value1, const std::string& field2, const std::string& value2) {
    // Your implementation goes here
    printf("GetWorkSurfListByFields2\n");
  }

  void InitSampleRegion() {
    // Your implementation goes here
    printf("InitSampleRegion\n");
  }

  int32_t GetOnlineAccountId() {
    // Your implementation goes here
    printf("GetOnlineAccountId\n");
  }

  void GetOnlineMine(Mine& _return) {
    // Your implementation goes here
    printf("GetOnlineMine\n");
  }

  int32_t VerifyMineAccount(const std::string& username, const std::string& pwd) {
    // Your implementation goes here
    printf("VerifyMineAccount\n");
  }

  void GetMineRegionsOfBase(std::vector<std::string> & _return, const std::string& baseName) {
    // Your implementation goes here
    printf("GetMineRegionsOfBase\n");
  }

  void GetBaseByRegion(std::string& _return, const std::string& regionName) {
    // Your implementation goes here
    printf("GetBaseByRegion\n");
  }

  void GetSampleMineOfRegion(Mine& _return, const std::string& regionName) {
    // Your implementation goes here
    printf("GetSampleMineOfRegion\n");
  }

  void GetSampleCoalOfRegion(Coal& _return, const std::string& regionName) {
    // Your implementation goes here
    printf("GetSampleCoalOfRegion\n");
  }

  void GetCoalNamesOfMine(std::vector<std::string> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetCoalNamesOfMine\n");
  }

  void GetCoalIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetCoalIdsOfMine\n");
  }

  void GetWorkAreasOfMine(std::vector<WorkArea> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkAreasOfMine\n");
  }

  void GetWorkSurfsOfMine(std::vector<WorkSurf> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkSurfsOfMine\n");
  }

  void GetDrillingSurfsOfMine(std::vector<DrillingSurf> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetDrillingSurfsOfMine\n");
  }

  void GetWorkAreaIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkAreaIdsOfMine\n");
  }

  void GetWorkSurfIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetWorkSurfIdsOfMine\n");
  }

  void GetDrillingSurfIdsOfMine(std::vector<int32_t> & _return, const int32_t mine_id) {
    // Your implementation goes here
    printf("GetDrillingSurfIdsOfMine\n");
  }

  int32_t DifficultEval(const Coal& coal) {
    // Your implementation goes here
    printf("DifficultEval\n");
  }

  void DifficultEvalString(std::string& _return, const Coal& coal) {
    // Your implementation goes here
    printf("DifficultEvalString\n");
  }

  double MineGasReservesW1(const int32_t mine_id) {
    // Your implementation goes here
    printf("MineGasReservesW1\n");
  }

  double MineGasReservesW2(const int32_t mine_id) {
    // Your implementation goes here
    printf("MineGasReservesW2\n");
  }

  double WorkAreaGasFlow(const WorkArea& work_area, const double K1) {
    // Your implementation goes here
    printf("WorkAreaGasFlow\n");
  }

  double MineGasFlow(const Mine& mine) {
    // Your implementation goes here
    printf("MineGasFlow\n");
  }

  double WorkSurfGasFlow1(const Coal& coal, const WorkArea& work_area, const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("WorkSurfGasFlow1\n");
  }

  double WorkSurfGasFlow2(const Coal& coal, const WorkArea& work_area, const WorkSurf& work_surf) {
    // Your implementation goes here
    printf("WorkSurfGasFlow2\n");
  }

  void DrillingSurfGasFlow(DrillingSurfGasFlowResult& _return, const Coal& coal, const DrillingSurf& drilling_surf, const Tunnel& tunnel) {
    // Your implementation goes here
    printf("DrillingSurfGasFlow\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<CbmServiceHandler> handler(new CbmServiceHandler());
  shared_ptr<TProcessor> processor(new CbmServiceProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

